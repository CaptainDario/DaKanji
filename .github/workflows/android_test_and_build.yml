# This is a basic workflow to help you get started with Actions

name: Android - Test and Build

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # allows that other workflows can run this one
  workflow_call:
    secrets:
      DA_KANJI_ML_RELEASES_TOKEN: 
        required: true
      KEY_PROPERTIES_KEY_PASSWORD: 
        required: true
      KEY_PROPERTIES_STORE_PASSWORD: 
        required: true
      KEY_PROPERTIES_KEY_ALIAS: 
        required: true
      KEYSTORE_BASE64: 
        required: true

env:
  JAVA_VERSION: "11.x"
  FLUTTER_VERSION: "2.10.3"
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Java to compile Android project
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}

      # get flutter version from pubspec
      - name: set flutter version
        run: python3 ./.github/workflows/building.py set_env_flutter_version

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: stable
          
      - name: Restore packages
        run: |
          flutter pub get

      # download all files necessary to run dakanji
      - name: setup dakanji
        run: python3 setup.py
        
      # download all TF lite files from the DaKanji-ML repo
      #- name: Download release asset
      #  uses: robinraju/release-downloader@v1.3
      #  with:
      #    repository: CaptainDario/DaKanji-ML
      #    latest: true
      #    fileName: "*"
      #    token: ${{ secrets.DA_KANJI_ML_RELEASES_TOKEN }}
      #    out-file-path: "assets/tflite_models"
        

      # TESTS  
      #- name: Analyze
      #  run: flutter analyze
      #- name: Run integration tests
      #  uses: reactivecircus/android-emulator-runner@v2
      #  with:
      #    api-level: 29
      #    disk-size: 8G
      #    script: |
      #      python3 ./integration_test/run_tests.py android

      # create signing files
      - name: Creating the key.properties file
        run: |
          echo keyPassword=\${{ secrets.KEY_PROPERTIES_KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PROPERTIES_STORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_PROPERTIES_KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=../../keys/DaKanjiRecognizer.jks >> ${{env.PROPERTIES_PATH}}
      - name: Decoding base64 key into a file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keys/DaKanjiRecognizer.jks

      # build apks
      - name: build apks for different architectures
        run: |
          flutter build apk --split-per-abi
          ls build/app/outputs/apk/release/
      - name: Archive arm64-v8a
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_android_arm64-v8a.zip
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk
      - name: Archive apk arm64-v7a
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_android_arm64-v7a.zip
          path: build/app/outputs/apk/release/app-armeabi-v7a-release.apk
      - name: Archive apk x86_64
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_android_x86_64.zip
          path: build/app/outputs/apk/release/app-x86_64-release.apk

      # appbundle
      - name: build app bundle
        run: |
          python3 ./.github/workflows/building.py comment_large_assets_in_pubspec
          flutter pub get
          flutter build appbundle
      - name: Archive appbundle
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_android_bundle.zip
          path: build/app/outputs/bundle/release/app-release.aab


