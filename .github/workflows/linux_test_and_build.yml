# This is a basic workflow to help you get started with Actions

name: Ubuntu - Test and Build

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # allows that other workflows can run this one
  workflow_call:
    secrets:
      DA_KANJI_ML_RELEASES_TOKEN: 
        required: true

#env:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # get flutter version from pubspec
      - name: set flutter version
        run: python3 ./.github/workflows/building.py set_env_flutter_version

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: stable
          
      - name: Restore packages
        run: flutter pub get
        
      # download all files necessary to run dakanji
      - name: setup dakanji
        run: python3 setup.py
        
      #- name: install build packages
      #  run: |
      #    sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libmpv-dev mpv

      #- name: enable linux
      #  run: flutter config --enable-linux-desktop

      # TESTS  
      #- name: Analyze
      #  run: flutter analyze

      #- name: Run integration tests
      #  run: python3 ./integration_test/run_tests.py

      # build portable linux
      #- name: build linux executable
      #  run: flutter build linux --release

      #- name: Archive production artifacts
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: DaKanji_linux.zip
      #    path: build/linux/x64/release/bundle


      # build flatpak


      # build SNAP
      - name: prepare snap building
        run: |
          python3 ./.github/workflows/building.py update_snapcraft_yaml
          flutter clean
          flutter pub get
      - name: Install Snapcraft and build snap
        uses: snapcore/action-build@v1
        id: snapcraft
      - uses: actions/upload-artifact@v3
        with:
          name: snap
          path: ${{ steps.snapcraft.outputs.snap }}
      # upload to snap store
