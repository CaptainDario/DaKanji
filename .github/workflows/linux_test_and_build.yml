# This is a basic workflow to help you get started with Actions

name: Ubuntu - Test and Build

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # allows that other workflows can run this one
  workflow_call:
    secrets:
      DA_KANJI_ML_RELEASES_TOKEN: 
        required: true

env:
  FLUTTER_VERSION: "2.10.3"
  FLUTTER_CHANNEL: "stable"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: ${{env.FLUTTER_CHANNEL}}
          
      - name: Restore packages
        run: flutter pub get
        
      # download all TF lite files from the DaKanji-ML repo
      - name: Download release asset
        uses: robinraju/release-downloader@v1.3
        with:
          repository: CaptainDario/DaKanji-ML
          latest: true
          fileName: "*"
          token: ${{ secrets.DA_KANJI_ML_RELEASES_TOKEN }}
          out-file-path: "assets/tflite_models"
        
      #- name: Analyze
      #  run: flutter analyze

      #- name: Run integration tests
      #  run: flutter test .\integration_test\ -d linux

      #- name: install build packages
      #  run: |
      #    sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      #- name: build linux executable
      #  run: |
      #    flutter config --enable-linux-desktop
      #    flutter build linux --release

      #- name: copy TF Lite binaries to build folder
      #  run: |
      #    mkdir build/linux/x64/release/bundle/blobs
      #    cp blobs/libtensorflowlite_c-linux.so build/linux/x64/release/bundle/blobs

      #- name: Archive production artifacts
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: DaKanji_linux.zip
      #    path: build/linux/x64/release/bundle

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          use_lxd: true

      - name: Build DaKanji snap
        run: sg lxd -c 'snapcraft --use-lxd'
     
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_win.snap
          path: dakanji_2.0.0+29_amd64.snap
