# This is a basic workflow to help you get started with Actions

name: MacOS - Test and Build

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # allows that other workflows can run this one
  workflow_call:
    secrets:
      DA_KANJI_ML_RELEASES_TOKEN: 
        required: true

env:
  FLUTTER_VERSION: "2.10.3"
  FLUTTER_CHANNEL: "stable"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-10.15

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: ${{env.FLUTTER_CHANNEL}}
          
      - name: Restore packages
        run: flutter pub get
        
      # download all TF lite files from the DaKanji-ML repo
      - name: Download release asset
        uses: robinraju/release-downloader@v1.3
        with:
          repository: CaptainDario/DaKanji-ML
          latest: true
          fileName: "*"
          token: ${{ secrets.DA_KANJI_ML_RELEASES_TOKEN }}
          out-file-path: "assets/tflite_models"

      - name: enable macos
        run: flutter config --enable-macos-desktop

      - name: Run integration tests
        run: python3 ./integration_test/run_tests.py

      - name: build macos executable
        run: flutter build macos --release

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DaKanji_macos.zip
          path: build/macos/Build/Products/Release/

