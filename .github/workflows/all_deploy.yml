name: All - Deploy

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

    inputs:
      upload_to_stores:
        description: "Should the build packages be uploaded to stores"
        default: false

jobs:
  
  #windows-test-and-build:
  #  uses: ./.github/workflows/windows_test_and_build.yml

  #linux-test-and-build:
  #  uses: ./.github/workflows/linux_test_and_build.yml

  #android-test-and-build:
  #  uses: ./.github/workflows/android_test_and_build.yml
  #  secrets:
  #    KEY_PROPERTIES_KEY_PASSWORD: ${{ secrets.KEY_PROPERTIES_KEY_PASSWORD }}
  #    KEY_PROPERTIES_STORE_PASSWORD: ${{ secrets.KEY_PROPERTIES_STORE_PASSWORD }}
  #    KEY_PROPERTIES_KEY_ALIAS: ${{ secrets.KEY_PROPERTIES_KEY_ALIAS }}
  #    KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      

  upload-releases-to-github:
    # upload to github releases after everything is build
    #needs: [linux-test-and-build, windows-test-and-build]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set env variables
        run: |
          python3 .github/workflows/building.py set_env_flutter_version
          python3 .github/workflows/building.py set_env_dakanji_version

      - name: Create text files
        run: |
          python3 .github/workflows/building.py create_latest_changes_txt

      #- uses: actions/download-artifact@v3
      #  with:
      #    path: artifacts/
          
      #- name: Display structure of downloaded files
      #  run: |
      #    ls
      #    echo "\n"
      #    ls -R artifacts/
      #    echo $PWD

      - name: delete previous beta releases
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          delete_release: true 
          tag_name: gh_action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      #- name: create zip from exe artifact folder
      #  run: |
      #    cd artifacts
      #    mv DaKanji_win.zip DaKanji_win
      #    
      #    zip -r DaKanji_win_exe.zip DaKanji_win
      #    rm -R DaKanji_win
          
      #    ls -R
          

      - name: Upload files to github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create gh_action \
            --draft \
            --notes-file latest_changes.txt \
            --title "$(head -n 1 latest_changes.txt)" \

      #      DaKanji_android_arm64-v7a.zip/app-armeabi-v7a-release.apk \
      #      DaKanji_android_arm64-v8a.zip/app-arm64-v8a-release.apk \
      #      DaKanji_android_bundle.zip/app-release.aab \
      #      DaKanji_android_x86_64.zip/app-x86_64-release.apk \
      #      DaKanji_win.msix/da_kanji_mobile.msix \
      #      DaKanji_win_exe.zip \
      #      
      #      

