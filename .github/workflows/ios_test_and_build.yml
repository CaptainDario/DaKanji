# This is a basic workflow to help you get started with Actions

name: iOS - Test and Build

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # allows that other workflows can run this one
  workflow_call:
    secrets:
      SENTRY_DSN:
        required: true
      POSTHOG_API_KEY_DEV:
        required: true
      POSTHOG_API_KEY_REL:
        required: true


env:
  FLUTTER_VERSION: "2.10.3"
  FLUTTER_CHANNEL: "stable"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      # get versions from pubspec
      - name: set env variables
        run: |
          python3 ./.github/workflows/building.py set_env_flutter_version
          python3 ./.github/workflows/building.py set_env_dakanji_version

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
          channel: ${{env.FLUTTER_CHANNEL}}
          
      - name: Restore packages
        run: flutter pub get
        
      # get / set dakanji assets from cache
      - name: Check dakanji assets in cache
        id: cache-dakanji-assets-restore
        uses: actions/cache/restore@v3
        with:
          path: tmp
          key: dakanji-assets
      - name: Download DaKanji assets if necessary
        if: steps.cache-dakanji-assets-restore.outputs.cache-hit != 'true'
        run: |
          python3 setup.py --download-all --no-delete
      - name: Move DaKanji assets if in cache
        if: steps.cache-dakanji-assets-restore.outputs.cache-hit == 'true'
        run: |
          python3 setup.py --no-download 
      - name: Save dakanji assets to cache if not saved
        if: steps.cache-dakanji-assets-restore.outputs.cache-hit != 'true'
        id: cache-dakanji-assets-save
        uses: actions/cache/save@v3
        with:
          path: tmp
          key: dakanji-assets
      - name: Setup DaKanji env.dart
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }} 
          POSTHOG_API_KEY_REL: ${{ secrets.POSTHOG_API_KEY_REL }} 
          POSTHOG_API_KEY_DEV: ${{ secrets.POSTHOG_API_KEY_DEV }} 
        run: |
          python3 ./.github/workflows/create_dakanji_env.py
          flutter pub run build_runner build --delete-conflicting-outputs
        
      # Test the application
      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 14 Pro'
          udid:  "BF8B95EE-B3F0-40C0-A3DB-052E385F4EE7"
      - name: Run integration tests
        run: |
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/draw_screen_test.dart -d BF8B95EE-B3F0-40C0-A3DB-052E385F4EE7

     

