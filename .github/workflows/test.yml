name: test


# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-mock-build:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test.txt
          path: .github/workflows/deploy_message.txt

  upload-releases-to-github:
    # upload to github releases after everything is build
    needs: [create-mock-build]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get latest changes and set LATEST_CHANGES
        run: |
          python .github/workflows/get_latest_changes.py
          echo 'LATEST_CHANGES<<EOF' >> $GITHUB_ENV
          cat latest_changes.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          name: test.txt
          path: artifacts/
          
      - name: Display structure of downloaded files
        run: ls
          
      - name: Upload to github releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: artifacts/*
          tag: beta
          prerelease: true
          overwrite: true
          body: |
            IMPORTANT: this is a beta release, expect bugs 

            Changelog:
            {{ LATEST_CHANGES }}



  deploy:
    # send discord notifications after everything is uploaded to github releases
    needs: upload-releases-to-github

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get latest changes and set LATEST_CHANGES
        run: |
          python .github/workflows/get_latest_changes.py
          echo 'LATEST_CHANGES<<EOF' >> $GITHUB_ENV
          cat latest_changes.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      
      - name: Get deploy message and set DEPLOY_MESSAGE
        run: |
          echo 'LATEST_CHANGES<<EOF' >> $GITHUB_ENV
          cat deploy_message.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WORKFLOW_TEST_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            {{  }}
